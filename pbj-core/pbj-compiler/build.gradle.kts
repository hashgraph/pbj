// SPDX-License-Identifier: Apache-2.0
plugins {
    id("org.hiero.gradle.module.gradle-plugin")
    id("org.hiero.gradle.feature.antlr")
}

description = "The PBJ Protobuf plugin provides protobuf compilation to java records."

// Address warnings and remove this exception
tasks.compileJava { options.compilerArgs.add("-Xlint:-text-blocks") }

// This project does not have a module-info.java, as Gradle does not support plugins that are
// Java Modules. For consistency, we still defined dependencies in terms of Module Names here.
mainModuleInfo {
    requiresStatic("com.github.spotbugs.annotations")
    requires("org.antlr.antlr4.runtime")
}

testModuleInfo {
    requires("org.junit.jupiter.api")
    requires("org.mockito")
}

gradlePlugin {
    plugins {
        @Suppress("UnstableApiUsage")
        create("compiler") {
            id = "com.hedera.pbj.pbj-compiler"
            group = "com.hedera.pbj"
            implementationClass = "com.hedera.pbj.compiler.PbjCompilerPlugin"
            displayName = "PBJ Compiler"
            description = project.description
            website = "https://github.com/hashgraph/pbj"
            vcsUrl = "https://github.com/hashgraph/pbj"
            tags.set(listOf("protobuf", "compiler", "generator", "runtime"))
        }
    }
}

// Define package name for code generated by ANTLR
tasks.generateGrammarSource {
    arguments = arguments + listOf("-package", "com.hedera.pbj.compiler.impl.grammar")
}

// Do not generate Java Doc for generated antlr grammar
tasks.javadoc { excludes.add("com/hedera/pbj/compiler/impl/grammar/**") }

// As a Gradle plugin cannot be a Java Module, we do not have official internal packages.
// We tell the dependency analysis to treat packages as "internal".
dependencyAnalysis { abi { exclusions { ignoreSubPackage("impl") } } }
